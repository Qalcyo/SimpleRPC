plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "ddb1eb0"
    id "org.jetbrains.kotlin.jvm" version "1.5.30"
    id 'org.spongepowered.mixin' version 'd5f9873'
}

version = "1.3.0"
group = "net.wyvest"
archivesBaseName = "SimpleRPC"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false

    clientRunArgs += '--mixin mixins.simplerpc.json'
    clientRunArgs += '--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker'
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

repositories {
    mavenCentral()
    maven { url 'https://repo.sk1er.club/repository/maven-releases/' }
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
    include ('gg.essential:loader-launchwrapper:1.1.3')
    provided 'gg.essential:essential-1.8.9-forge:1788'
    include ('com.github.cbyrneee:KDiscordIPC:763fd63') {
        transitive = false
    }
    annotationProcessor compileOnly('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    include('com.google.code.gson:gson:2.8.9')
    include('com.kohlschutter.junixsocket:junixsocket-core:2.4.0')
}

jar {
    manifest.attributes(
            'ModSide': 'CLIENT',
            'FMLCorePluginContainsFMLMod': true,
            'ForceLoadAsMod': true,
            'MixinConfigs': 'mixins.simplerpc.json',
            'TweakClass': 'gg.essential.loader.stage0.EssentialSetupTweaker',
            'TweakOrder': '0'
    )

    enabled = false
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    relocate("com", "kdiscordipc")
    exclude 'LICENSE.md'
    exclude 'pack.mcmeta'
    exclude 'dummyThing'
    exclude '**/module-info.class'
    exclude '*.so'
    exclude '*.dylib'
    exclude '*.dll'
    exclude '*.jnilib'
    exclude 'ibxm/**'
    exclude 'com/jcraft/**'
    exclude 'org/lwjgl/**'
    exclude 'net/java/**'

    exclude 'META-INF/proguard/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/com.android.tools/**'

    exclude 'fabric.mod.json'
}

// This forces the build task to run shadowJar after
tasks.reobfJar.dependsOn(tasks.shadowJar)

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.simplerpc.refmap.json"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

sourceSets {
    dummy
    main {
        compileClasspath += dummy.output
        ext.refMap = "mixins.simplerpc.refmap.json"
        output.resourcesDir = file("${buildDir}/classes/kotlin/main")
    }
}